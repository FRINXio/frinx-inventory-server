generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model device {
  id              String        @id @default(uuid())
  createdAt       DateTime      @default(now()) @map("created_at")
  updatedAt       DateTime      @updatedAt @map("updated_at")
  name            String
  role            String?
  managementIp    String?       @map("management_ip")
  port            Int?
  config          Json?
  model           String?
  deviceType      String?       @map("device_type")
  version         String?       @map("version")
  software        String?
  softwareVersion String?       @map("sw_version")
  macAddress      String?       @map("mac_address")
  serialNumber    String?       @map("serial_number")
  vendor          String?
  mountParameters Json?         @map("mount_parameters")
  username        String?
  password        String?
  tenantId        String        @map("tenant_id")
  uniconfigZoneId String        @map("uniconfig_zone")
  source          Source
  serviceState    ServiceState  @default(PLANNING)
  locationId      String?       @map("location_id")
  location        location?     @relation(fields: [locationId], references: [id])
  uniconfigZone   uniconfigZone @relation(fields: [uniconfigZoneId], references: [id], onDelete: Cascade)
  blueprintId     String?       @map("blueprint_id")
  blueprint       blueprint?    @relation(fields: [blueprintId], references: [id])
  label           deviceLabel[]
  metadata        Json?
  stream          stream[]

  @@unique([name, tenantId], name: "udx_device_name_tenant_id")
  @@index([tenantId], map: "idx_device_tenant_id")
  @@map("device_inventory")
}

model uniconfigZone {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  name      String
  tenantId  String   @map("tenant_id")
  device    device[]

  @@unique([name, tenantId], name: "udx_uniconfig_zone_name_tenant_id")
  @@index([tenantId], map: "idx_uniconfig_zone_tenant_id")
  @@map("uniconfig_zone")
}

model label {
  id        String        @id @default(uuid())
  createdAt DateTime      @default(now()) @map("created_at")
  updatedAt DateTime      @updatedAt @map("updated_at")
  name      String
  tenantId  String        @map("tenant_id")
  device    deviceLabel[]

  @@unique([name, tenantId], name: "udx_label_name_tenant_id")
  @@index([tenantId], map: "idx_label_tenant_id")
}

model deviceLabel {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  deviceId  String   @map("device_id")
  labelId   String   @map("label_id")
  device    device   @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  label     label    @relation(fields: [labelId], references: [id])

  @@unique([deviceId, labelId], name: "udx_device_label_device_id_label_id")
  @@map("device_label")
}

model location {
  id                 String   @id @default(uuid())
  createdAt          DateTime @default(now()) @map("created_at")
  updatedAt          DateTime @updatedAt @map("updated_at")
  name               String
  tenantId           String   @map("tenant_id")
  latitude           String?
  longitude          String?
  addressLine1       String?  @map("address_line_1")
  addressLine2       String?  @map("address_line_2")
  zipCode            String?  @map("zip_code")
  sortingCode        String?  @map("sorting_code")
  dependentLocality  String?  @map("dependent_locality")
  locality           String?
  administrativeArea String?  @map("administrative_area")
  country            String
  device             device[]

  @@unique([name, tenantId], name: "udx_location_name_tenant_id")
  @@index([tenantId], map: "idx_location_tenant_id")
}

model blueprint {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  name      String
  tenantId  String   @map("tenant_id")
  template  String
  device    device[]
  stream    stream[]

  @@unique([name, tenantId], name: "udx_device_blueprint_name_tenant_id")
  @@index([tenantId], map: "idx_device_blueprint_tenant_id")
  @@map("device_blueprint")
}

model stream {
  id               String     @id @default(uuid())
  createdAt        DateTime   @default(now()) @map("created_at")
  updatedAt        DateTime   @updatedAt @map("updated_at")
  deviceName       String     @map("device_name")
  streamName       String     @map("stream_name")
  streamParameters Json?      @map("stream_parameters")
  tenantId         String     @map("tenant_id")
  device           device     @relation(fields: [deviceName, tenantId], references: [name, tenantId])
  blueprintId      String?    @map("blueprint_id")
  blueprint        blueprint? @relation(fields: [blueprintId], references: [id])

  @@unique([deviceName, streamName, tenantId], name: "udx_device_name_stream_name_id")
}

enum Source {
  MANUAL
  DISCOVERED
  IMPORTED
}

enum ServiceState {
  PLANNING
  IN_SERVICE
  OUT_OF_SERVICE
}
